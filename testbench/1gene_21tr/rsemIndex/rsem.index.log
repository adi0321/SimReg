/home/code/IMPORT/RSEM/rsem-1.2.8/rsem-synthesis-reference-transcripts /data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr 0 0 /data1/adrian/testbench//1gene_21tr/1gene_21tr.fa
Transcript Information File is generated!
Group File is generated!
Chromosome List File is generated!
Extracted Sequences File is generated!

/home/code/IMPORT/RSEM/rsem-1.2.8/rsem-preref /data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr.transcripts.fa 0 /data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr -l 125
Refs.makeRefs finished!
Refs.saveRefs finished!
/data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr.transcripts.fa is generated!
/data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr.idx.fa is generated!

bowtie-build -f /data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr.idx.fa /data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr
Settings:
  Output files: "/data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr.idx.fa
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 8994
Using parameters --bmax 6746 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 6746 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 4496.5 (target: 6745)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 6736
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 6737
Getting block 2 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 597
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 598
Getting block 3 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 6464
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 6465
Getting block 4 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 5231
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 5232
Getting block 5 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 5090
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 5091
Getting block 6 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 4513
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 4514
Getting block 7 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 4900
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 4901
Getting block 8 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 2441
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 2442
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 9725
fchr[G]: 20174
fchr[T]: 30110
fchr[$]: 35979
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4205384 bytes to primary EBWT file: /data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr.1.ebwt
Wrote 4504 bytes to secondary EBWT file: /data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 35979
    bwtLen: 35980
    sz: 8995
    bwtSz: 8995
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 1125
    offsSz: 4500
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 81
    numSides: 162
    numLines: 162
    ebwtTotLen: 10368
    ebwtTotSz: 10368
    reverse: 0
Total time for call to driver() for forward index: 00:00:01
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 8994
Using parameters --bmax 6746 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 6746 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 5; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 4496.5 (target: 6745)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 5852
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 5853
Getting block 2 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 6573
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 6574
Getting block 3 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 1674
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 1675
Getting block 4 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 5893
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 5894
Getting block 5 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 5694
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 5695
Getting block 6 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 2490
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 2491
Getting block 7 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 5880
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 5881
Getting block 8 of 8
  Reserving size (6746) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 1916
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 1917
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 9725
fchr[G]: 20174
fchr[T]: 30110
fchr[$]: 35979
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4205384 bytes to primary EBWT file: /data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr.rev.1.ebwt
Wrote 4504 bytes to secondary EBWT file: /data1/adrian/testbench//1gene_21tr/rsemIndex/1gene_21tr.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 35979
    bwtLen: 35980
    sz: 8995
    bwtSz: 8995
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 1125
    offsSz: 4500
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 81
    numSides: 162
    numLines: 162
    ebwtTotLen: 10368
    ebwtTotSz: 10368
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:00

